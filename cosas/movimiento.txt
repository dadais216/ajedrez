Un movimiento es un objeto que contiene una funcion virtual que calcula movimientos posibles,
y genera clickers seleccionados especificamente.
En su constructor tiene un puntero al tablero, pueden recibir una lista de coordenadas, 
y a veces algun indicador más sobre las acciones

No tengo claro si un movimiento debería tener todos los movimientos de un tipo o cada movimiento
solo tener un movimiento. El segundo supongo que ocupa mas espacio, pero es mas limpio y va
a ser mas facil de hacer usando el editor

Todas las coordenadas son relativas a la pieza

El movimiento de salto recibe una coordenada, y un indicador de clicker (solo captura, solo movimiento,
normal). Genera clickers solo si el espacio esta libre.

el desliz es hacer el metamovimiento repetir, y que repita el movimiento de salto.
El repetir normalmente usa la misma condicion que el movimiento para ver si seguir o no, aunque
puede usar la negacion o una condicion propia.
Por ejemplo, si se usar repetir solo-captura, o la pieza no se va a mover porque no puede capturar en el
primer paso, o va a tener la opcion de capturar varias piezas "en fila" aunque solo va a capturar la
ultima, pasando en la animacion por encima de las demas
Hay que usar repetirneg captura para hacer una pieza que se mueve hasta capturar una pieza.
Salirse fuera del tablero es siempre falso.

Va por ahi la cosa, aunque estaría bueno poder usar repetir para las killing sprees tambien. Hay que generalizar mas.
No me gusta que solo el ultimo de los movimientos de una cadena haga efecto real, porque eso sería centrarse solo
en las necesidades de mover. Repetir debería causar los efectos de todos los pasos, lo que lo hace una funcion mas
compleja, pero mucho mas potente.

Si se sigue trabajando creo que podrían agregarse killing sprees y doble turnos a repetir, pero va a hacer a la
funcion todavia mas compleja, y ademas va a crear todos los clickers posibles de un saque, lo que va hacer muchos
calculos al pedo, puede que incluso se haltee, y tambien va a llenar todo de clickers y no va a estar claro cual hace que.
Por lo tanto, voy a hacer las killing spree y los doble turnos por separado, y van a ser para la IA y el jugador cosas
especiales, en el caso de la IA requiriendo un procesado especial y en caso del jugador dos clicks, o mas.



Supongo que los checks de castillo (hay que mirar todos las coordenadas castillo antes de hacer cualquier paso)
estan integrados en los movimientos, pero solo se leen si se les pasa un bool a la funcion. o simplemente siempre
se mira una lista vacia.
Tambien podría hacer movimientos separados, pero es un poco pesado

Por ahi estaría bueno que se puedan crear movimientos de movimientos, va a simplificar 
movimientos complejos y va a permitir hacer procesos repetidos raros
Un movimiento chequea unas condiciones y realiza una accion.
Un metamovimiento chequa unas condiciones y activa un movimiento, o varios
Los importantes serían repetir, inicial y then.
Repetir recibe un movimiento y lo repite siempre que se cumpla una condicion, devolviendo una lista de clickers.
Inicial hace que lo que contenga solo se de si el bool de inicial es verdadero
Then sirve para poder concadenar movimientos, pudiendo asi crear cosas mas complejas -ver si lo uso en algun lado
tambien habría uno de doble turno, supongo
Por pasos tambien podría definirse como un metamovimiento, primero mira si una lista de coordenadas esta vacia,
de estarlo llama a su movimiento asociado.  Supongo que habrá que pasar la lista como un extra para poder hacer la animacion

Cada movimiento, de generar un clicker devuelve true y de no hacerlo false, para poder hacer logica con los metamovimientos

Creo que podría hacer todo de tan forma que los unicos movimientos son las acciones en una coordenada (mover, capturar,
convertir), y todo lo demas es meta


Los movimientos iniciales estan en una lista separada de movimientos comunes
No estoy muy seguro de como detectar que una pieza hizo su movimiento inicial cuando
se esta volviendo para atras. Supongo que hay que usar una extension de turno para
eso



--









